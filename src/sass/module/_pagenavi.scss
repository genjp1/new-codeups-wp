@use "global" as *;

.pagenavi {

}

.pagenavi__inner {
    // margin: auto;
    // // max-width: rem(600);
    // width: 100%;
    // @include mq(md){
    //     // max-width: rem(1200);
    // }
}

.pagenavi .wp-pagenavi {
	clear: both;
	text-align: center;

    display: flex;
    flex-wrap: nowrap;
    justify-content: center;
    margin-left: -1px;
    // justify-content: space-between;
    // display: flex;
    // @include mq("md") {
    //     display: block;
    // }
}

.pagenavi.page-blogDetail__pagenavi .wp-pagenavi {

    @include mq("md") {
        margin-left: rem(-34);
    }
}

.pagenavi .wp-pagenavi a,
.pagenavi .wp-pagenavi span {
    color: $green1;
    margin: rem(0) rem(6);
	// padding: rem(11) rem(14) rem(11) rem(14);
    font-size: rem(16);
    line-height: 1;
	white-space: nowrap;
    border: 1px solid $green1;
	background-color: $white;
    transition: .3s;
    // min-width: rem(40); /* 最小幅を設定して要素がある程度の幅を保持するようにする */
    width: 38px;
    height: 38px;
    display:flex;
    align-items:center;
    justify-content:center;

    @include mq("md") {
        // padding: 11px 14px;
    }
}

.pagenavi .wp-pagenavi a:hover {
	color: #fff;
	background-color: $green1;
	border: 1px solid $green1;
    opacity: 1;
}

.pagenavi .wp-pagenavi .current {
	color: #fff;
	background-color: $green1;
	border: 1px solid $green1;
}

.pagenavi .wp-pagenavi .previouspostslink {
    position: relative;
    margin-right: rem(33);
    margin-left: rem(0);
    width: 38px;
    height: 38px;
    // padding: rem(18) rem(18);

    // @include mq("md") {
    //     margin-right: rem(36);

    // }
}

.pagenavi.page-blogDetail__pagenavi .wp-pagenavi .previouspostslink {
    margin-right: rem(41);
}

.pagenavi .wp-pagenavi .previouspostslink::after {
    content: "";
    position: absolute;
    top: 36%;
    left: 42%;
    transform: translate(-50%, -50%);
    width: rem(10); /* ボックスの横幅を指定する */
    height: rem(10); /* ボックスの高さを指定する */
    border-top: 1px solid $green1; /* 境界線の上部を実線に指定する*/
    border-right: 1px solid $green1;/* 境界線の上部を実線に指定する*/
    display: inline-block; /* インライン要素化 */
    transform: rotate(-135deg); /* ボックスを回転させる（左向き矢印） */

}


.pagenavi .wp-pagenavi .nextpostslink {
    position: relative;
    margin-left: rem(33);
    margin-right: rem(0);
    width: 38px;
    height: 38px;
    // padding: rem(18) rem(18);

    // @include mq("md") {
    //     margin-left: rem(36);
    //     margin-left: rem(31.5);
    // }

}

.pagenavi.page-blogDetail__pagenavi .wp-pagenavi .nextpostslink {
    margin-left: rem(41);
}


.pagenavi .wp-pagenavi .nextpostslink::after {
    content: "";
    position: absolute;
    top: 36%;
    left: 30%;
    transform: translate(-50%, -50%);
    width: rem(10); /* ボックスの横幅を指定する */
    height: rem(10); /* ボックスの高さを指定する */
    border-top: 1px solid $green1; /* 境界線の上部を実線に指定する*/
    border-right: 1px solid $green1;/* 境界線の上部を実線に指定する*/
    display: inline-block; /* インライン要素化 */
    transform: rotate(45deg); /* ボックスを回転させる（左向き矢印） */

}
/*=====================================================================
# pagenaviのpreviouspostslink と .nextpostslink にホバーした際の処理（jsとセット記述）
======================================================================*/
// hover-effectクラスが適用された時の::after疑似要素のスタイル
.pagenavi .wp-pagenavi .previouspostslink.hover-effect::after,
.pagenavi .wp-pagenavi .nextpostslink.hover-effect::after {
    border-top: 1px solid white;
    border-right: 1px solid white;
}
